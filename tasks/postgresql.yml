---
- name: "setup | install postgresql repository"
  yum:
    name: "https://yum.postgresql.org/11/redhat/rhel-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
    state: present
  become: yes

- name: "setup | check postgres data dir exist"
  stat:
    path: "{{ postgresql_data_dir }}"
  register: pg_dir

- name: "setup | cleanup postgres data dir"
  file:
    path: "{{ postgresql_data_dir }}"
    state: absent
  become: yes

- name: "setup | make sure postgres data dir exist"
  file:
    path: "{{ postgresql_data_dir }}"
    state: directory
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_user }}"
  when: ! pg_dir.stat.exists
  become: yes

- name: "setup | install postgresql "
  yum:
    name: ["postgresql11-server", "postgresql11"]
    state: present
    disablerepo: 'pgdg*-*'
    enablerepo: "{{ pg_repo }}"
  become: yes

- name: "setup | update postgresql home"
  lineinfile:
    dest: /usr/lib/systemd/system/postgresql-11.service
    regexp: '^Environment\=PGDATA\=\/var\/lib\/pgsql\/11\/data/'
    line: "Environment=PGDATA={{ postgresql_data_dir }}"
  become: yes

- name: "setup | initialize postgresql database"
  command: "{{ postgresql_bin_path }} initdb"
  become: yes


- name: "setup | make sure postgresql service started"
  ansible.builtin.systemd:
    name: postgresql-11.service
    state: started
  become: yes

- name: "setup | create zabbix database"
  command: '"psql -c create database {{ zabbix_db }}"'
  become_user: "{{ postgresql_user }}"

- name: "setup | create zabbix user"
  command: '"psql -c create user zabbix with password {{ zabbix_db_pass }}"'
  become_user: "{{ postgresql_user }}"

- name: "setup | grant privileges to zabbix db user"
  command: '"psql -c grant all privileges on database {{ zabbix_db }} to {{ zabbix_db_user }};"'

- name: "setup | unarchive zabbix schema"
  unarchive:
    src: /usr/share/doc/zabbix-server-pgsql-5.0-10/create.sql.gz
    dest: /tmp/create.sql


- name: "setup | create zabbix schema in database"
  command: "psql -d zabbix -f /tmp/create.sql"
  become_user: "{{ postgresql_user }}"
